name: CI/CD Pipeline

on:
  push:
    branches:
      - main

env:
  REGISTRY: docker.io
  username: ${{ secrets.DOCKER_USERNAME }}
  password: ${{ secrets.DOCKER_PASSWORD }}
  PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Get the current version from Docker Hub
      id: get_current_version
      run: |
        DOCKER_IMAGE_VERSION=$(curl -s -H "Authorization: Bearer $DOCKER_PASSWORD" "https://registry.hub.docker.com/v2/repositories/alonsaban/simple-java-project/tags/" | jq -r '.results[0].name')
        echo "DOCKER_IMAGE_VERSION=$DOCKER_IMAGE_VERSION" >> $GITHUB_ENV

    - name: Increment version
      run: echo "DOCKER_IMAGE_VERSION=$(echo $DOCKER_IMAGE_VERSION | awk -F. '{$NF+=1} 1' OFS=. )" >> $GITHUB_ENV

    - name: Build and push
      uses: docker/build-push-action@v5
      with:
        push: true
        tags: alonsaban/simple-java-project:${{ env.DOCKER_IMAGE_VERSION }}
        context: .
        file: ./docker/Dockerfile
  
  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    
    - name: Set up SSH key
      run: |
        echo "$PRIVATE_KEY" > private_key
        chmod 600 private_key
    
    - name: Deploy to EC2 - Connect to Instance
      run: |
        ssh -o StrictHostKeyChecking=no -i ./private_key ubuntu@3.121.212.148 "echo 'Connected to EC2 Instance'"
    
    - name: Deploy to EC2 - Pull Docker Image
      run: |
        ssh -o StrictHostKeyChecking=no -i ./private_key ubuntu@3.121.212.148 "docker pull alonsaban/simple-java-project:10"

